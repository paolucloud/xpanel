// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transport/internet/tls/config.proto

package cloud.paolu.xray.transport.internet.tls;

/**
 * Protobuf type {@code xray.transport.internet.tls.Config}
 */
public final class Config extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:xray.transport.internet.tls.Config)
    ConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Config.newBuilder() to construct.
  private Config(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Config() {
    certificate_ = java.util.Collections.emptyList();
    serverName_ = "";
    nextProtocol_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    minVersion_ = "";
    maxVersion_ = "";
    cipherSuites_ = "";
    fingerprint_ = "";
    pinnedPeerCertificateChainSha256_ = java.util.Collections.emptyList();
    pinnedPeerCertificatePublicKeySha256_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Config();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return cloud.paolu.xray.transport.internet.tls.ConfigOuterClass.internal_static_xray_transport_internet_tls_Config_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return cloud.paolu.xray.transport.internet.tls.ConfigOuterClass.internal_static_xray_transport_internet_tls_Config_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            cloud.paolu.xray.transport.internet.tls.Config.class, cloud.paolu.xray.transport.internet.tls.Config.Builder.class);
  }

  public static final int ALLOW_INSECURE_FIELD_NUMBER = 1;
  private boolean allowInsecure_ = false;
  /**
   * <pre>
   * Whether or not to allow self-signed certificates.
   * </pre>
   *
   * <code>bool allow_insecure = 1;</code>
   * @return The allowInsecure.
   */
  @java.lang.Override
  public boolean getAllowInsecure() {
    return allowInsecure_;
  }

  public static final int CERTIFICATE_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<cloud.paolu.xray.transport.internet.tls.Certificate> certificate_;
  /**
   * <pre>
   * List of certificates to be served on server.
   * </pre>
   *
   * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
   */
  @java.lang.Override
  public java.util.List<cloud.paolu.xray.transport.internet.tls.Certificate> getCertificateList() {
    return certificate_;
  }
  /**
   * <pre>
   * List of certificates to be served on server.
   * </pre>
   *
   * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends cloud.paolu.xray.transport.internet.tls.CertificateOrBuilder> 
      getCertificateOrBuilderList() {
    return certificate_;
  }
  /**
   * <pre>
   * List of certificates to be served on server.
   * </pre>
   *
   * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
   */
  @java.lang.Override
  public int getCertificateCount() {
    return certificate_.size();
  }
  /**
   * <pre>
   * List of certificates to be served on server.
   * </pre>
   *
   * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
   */
  @java.lang.Override
  public cloud.paolu.xray.transport.internet.tls.Certificate getCertificate(int index) {
    return certificate_.get(index);
  }
  /**
   * <pre>
   * List of certificates to be served on server.
   * </pre>
   *
   * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
   */
  @java.lang.Override
  public cloud.paolu.xray.transport.internet.tls.CertificateOrBuilder getCertificateOrBuilder(
      int index) {
    return certificate_.get(index);
  }

  public static final int SERVER_NAME_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object serverName_ = "";
  /**
   * <pre>
   * Override server name.
   * </pre>
   *
   * <code>string server_name = 3;</code>
   * @return The serverName.
   */
  @java.lang.Override
  public java.lang.String getServerName() {
    java.lang.Object ref = serverName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      serverName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Override server name.
   * </pre>
   *
   * <code>string server_name = 3;</code>
   * @return The bytes for serverName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getServerNameBytes() {
    java.lang.Object ref = serverName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      serverName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int NEXT_PROTOCOL_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringArrayList nextProtocol_ =
      com.google.protobuf.LazyStringArrayList.emptyList();
  /**
   * <pre>
   * Lists of string as ALPN values.
   * </pre>
   *
   * <code>repeated string next_protocol = 4;</code>
   * @return A list containing the nextProtocol.
   */
  public com.google.protobuf.ProtocolStringList
      getNextProtocolList() {
    return nextProtocol_;
  }
  /**
   * <pre>
   * Lists of string as ALPN values.
   * </pre>
   *
   * <code>repeated string next_protocol = 4;</code>
   * @return The count of nextProtocol.
   */
  public int getNextProtocolCount() {
    return nextProtocol_.size();
  }
  /**
   * <pre>
   * Lists of string as ALPN values.
   * </pre>
   *
   * <code>repeated string next_protocol = 4;</code>
   * @param index The index of the element to return.
   * @return The nextProtocol at the given index.
   */
  public java.lang.String getNextProtocol(int index) {
    return nextProtocol_.get(index);
  }
  /**
   * <pre>
   * Lists of string as ALPN values.
   * </pre>
   *
   * <code>repeated string next_protocol = 4;</code>
   * @param index The index of the value to return.
   * @return The bytes of the nextProtocol at the given index.
   */
  public com.google.protobuf.ByteString
      getNextProtocolBytes(int index) {
    return nextProtocol_.getByteString(index);
  }

  public static final int ENABLE_SESSION_RESUMPTION_FIELD_NUMBER = 5;
  private boolean enableSessionResumption_ = false;
  /**
   * <pre>
   * Whether or not to enable session (ticket) resumption.
   * </pre>
   *
   * <code>bool enable_session_resumption = 5;</code>
   * @return The enableSessionResumption.
   */
  @java.lang.Override
  public boolean getEnableSessionResumption() {
    return enableSessionResumption_;
  }

  public static final int DISABLE_SYSTEM_ROOT_FIELD_NUMBER = 6;
  private boolean disableSystemRoot_ = false;
  /**
   * <pre>
   * If true, root certificates on the system will not be loaded for
   * verification.
   * </pre>
   *
   * <code>bool disable_system_root = 6;</code>
   * @return The disableSystemRoot.
   */
  @java.lang.Override
  public boolean getDisableSystemRoot() {
    return disableSystemRoot_;
  }

  public static final int MIN_VERSION_FIELD_NUMBER = 7;
  @SuppressWarnings("serial")
  private volatile java.lang.Object minVersion_ = "";
  /**
   * <pre>
   * The minimum TLS version.
   * </pre>
   *
   * <code>string min_version = 7;</code>
   * @return The minVersion.
   */
  @java.lang.Override
  public java.lang.String getMinVersion() {
    java.lang.Object ref = minVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      minVersion_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The minimum TLS version.
   * </pre>
   *
   * <code>string min_version = 7;</code>
   * @return The bytes for minVersion.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMinVersionBytes() {
    java.lang.Object ref = minVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      minVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MAX_VERSION_FIELD_NUMBER = 8;
  @SuppressWarnings("serial")
  private volatile java.lang.Object maxVersion_ = "";
  /**
   * <pre>
   * The maximum TLS version.
   * </pre>
   *
   * <code>string max_version = 8;</code>
   * @return The maxVersion.
   */
  @java.lang.Override
  public java.lang.String getMaxVersion() {
    java.lang.Object ref = maxVersion_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      maxVersion_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The maximum TLS version.
   * </pre>
   *
   * <code>string max_version = 8;</code>
   * @return The bytes for maxVersion.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMaxVersionBytes() {
    java.lang.Object ref = maxVersion_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      maxVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CIPHER_SUITES_FIELD_NUMBER = 9;
  @SuppressWarnings("serial")
  private volatile java.lang.Object cipherSuites_ = "";
  /**
   * <pre>
   * Specify cipher suites, except for TLS 1.3.
   * </pre>
   *
   * <code>string cipher_suites = 9;</code>
   * @return The cipherSuites.
   */
  @java.lang.Override
  public java.lang.String getCipherSuites() {
    java.lang.Object ref = cipherSuites_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      cipherSuites_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Specify cipher suites, except for TLS 1.3.
   * </pre>
   *
   * <code>string cipher_suites = 9;</code>
   * @return The bytes for cipherSuites.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCipherSuitesBytes() {
    java.lang.Object ref = cipherSuites_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      cipherSuites_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PREFER_SERVER_CIPHER_SUITES_FIELD_NUMBER = 10;
  private boolean preferServerCipherSuites_ = false;
  /**
   * <pre>
   * Whether the server selects its most preferred ciphersuite.
   * </pre>
   *
   * <code>bool prefer_server_cipher_suites = 10;</code>
   * @return The preferServerCipherSuites.
   */
  @java.lang.Override
  public boolean getPreferServerCipherSuites() {
    return preferServerCipherSuites_;
  }

  public static final int FINGERPRINT_FIELD_NUMBER = 11;
  @SuppressWarnings("serial")
  private volatile java.lang.Object fingerprint_ = "";
  /**
   * <pre>
   * TLS Client Hello fingerprint (uTLS).
   * </pre>
   *
   * <code>string fingerprint = 11;</code>
   * @return The fingerprint.
   */
  @java.lang.Override
  public java.lang.String getFingerprint() {
    java.lang.Object ref = fingerprint_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      fingerprint_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * TLS Client Hello fingerprint (uTLS).
   * </pre>
   *
   * <code>string fingerprint = 11;</code>
   * @return The bytes for fingerprint.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFingerprintBytes() {
    java.lang.Object ref = fingerprint_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      fingerprint_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REJECT_UNKNOWN_SNI_FIELD_NUMBER = 12;
  private boolean rejectUnknownSni_ = false;
  /**
   * <code>bool reject_unknown_sni = 12;</code>
   * @return The rejectUnknownSni.
   */
  @java.lang.Override
  public boolean getRejectUnknownSni() {
    return rejectUnknownSni_;
  }

  public static final int PINNED_PEER_CERTIFICATE_CHAIN_SHA256_FIELD_NUMBER = 13;
  @SuppressWarnings("serial")
  private java.util.List<com.google.protobuf.ByteString> pinnedPeerCertificateChainSha256_;
  /**
   * <pre>
   * &#64;Document A pinned certificate chain sha256 hash.
   *&#64;Document If the server's hash does not match this value, the connection will be aborted.
   *&#64;Document This value replace allow_insecure.
   *&#64;Critical
   * </pre>
   *
   * <code>repeated bytes pinned_peer_certificate_chain_sha256 = 13;</code>
   * @return A list containing the pinnedPeerCertificateChainSha256.
   */
  @java.lang.Override
  public java.util.List<com.google.protobuf.ByteString>
      getPinnedPeerCertificateChainSha256List() {
    return pinnedPeerCertificateChainSha256_;
  }
  /**
   * <pre>
   * &#64;Document A pinned certificate chain sha256 hash.
   *&#64;Document If the server's hash does not match this value, the connection will be aborted.
   *&#64;Document This value replace allow_insecure.
   *&#64;Critical
   * </pre>
   *
   * <code>repeated bytes pinned_peer_certificate_chain_sha256 = 13;</code>
   * @return The count of pinnedPeerCertificateChainSha256.
   */
  public int getPinnedPeerCertificateChainSha256Count() {
    return pinnedPeerCertificateChainSha256_.size();
  }
  /**
   * <pre>
   * &#64;Document A pinned certificate chain sha256 hash.
   *&#64;Document If the server's hash does not match this value, the connection will be aborted.
   *&#64;Document This value replace allow_insecure.
   *&#64;Critical
   * </pre>
   *
   * <code>repeated bytes pinned_peer_certificate_chain_sha256 = 13;</code>
   * @param index The index of the element to return.
   * @return The pinnedPeerCertificateChainSha256 at the given index.
   */
  public com.google.protobuf.ByteString getPinnedPeerCertificateChainSha256(int index) {
    return pinnedPeerCertificateChainSha256_.get(index);
  }

  public static final int PINNED_PEER_CERTIFICATE_PUBLIC_KEY_SHA256_FIELD_NUMBER = 14;
  @SuppressWarnings("serial")
  private java.util.List<com.google.protobuf.ByteString> pinnedPeerCertificatePublicKeySha256_;
  /**
   * <pre>
   * &#64;Document A pinned certificate public key sha256 hash.
   *&#64;Document If the server's public key hash does not match this value, the connection will be aborted.
   *&#64;Document This value replace allow_insecure.
   *&#64;Critical
   * </pre>
   *
   * <code>repeated bytes pinned_peer_certificate_public_key_sha256 = 14;</code>
   * @return A list containing the pinnedPeerCertificatePublicKeySha256.
   */
  @java.lang.Override
  public java.util.List<com.google.protobuf.ByteString>
      getPinnedPeerCertificatePublicKeySha256List() {
    return pinnedPeerCertificatePublicKeySha256_;
  }
  /**
   * <pre>
   * &#64;Document A pinned certificate public key sha256 hash.
   *&#64;Document If the server's public key hash does not match this value, the connection will be aborted.
   *&#64;Document This value replace allow_insecure.
   *&#64;Critical
   * </pre>
   *
   * <code>repeated bytes pinned_peer_certificate_public_key_sha256 = 14;</code>
   * @return The count of pinnedPeerCertificatePublicKeySha256.
   */
  public int getPinnedPeerCertificatePublicKeySha256Count() {
    return pinnedPeerCertificatePublicKeySha256_.size();
  }
  /**
   * <pre>
   * &#64;Document A pinned certificate public key sha256 hash.
   *&#64;Document If the server's public key hash does not match this value, the connection will be aborted.
   *&#64;Document This value replace allow_insecure.
   *&#64;Critical
   * </pre>
   *
   * <code>repeated bytes pinned_peer_certificate_public_key_sha256 = 14;</code>
   * @param index The index of the element to return.
   * @return The pinnedPeerCertificatePublicKeySha256 at the given index.
   */
  public com.google.protobuf.ByteString getPinnedPeerCertificatePublicKeySha256(int index) {
    return pinnedPeerCertificatePublicKeySha256_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (allowInsecure_ != false) {
      output.writeBool(1, allowInsecure_);
    }
    for (int i = 0; i < certificate_.size(); i++) {
      output.writeMessage(2, certificate_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serverName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, serverName_);
    }
    for (int i = 0; i < nextProtocol_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, nextProtocol_.getRaw(i));
    }
    if (enableSessionResumption_ != false) {
      output.writeBool(5, enableSessionResumption_);
    }
    if (disableSystemRoot_ != false) {
      output.writeBool(6, disableSystemRoot_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(minVersion_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, minVersion_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(maxVersion_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, maxVersion_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cipherSuites_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, cipherSuites_);
    }
    if (preferServerCipherSuites_ != false) {
      output.writeBool(10, preferServerCipherSuites_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fingerprint_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, fingerprint_);
    }
    if (rejectUnknownSni_ != false) {
      output.writeBool(12, rejectUnknownSni_);
    }
    for (int i = 0; i < pinnedPeerCertificateChainSha256_.size(); i++) {
      output.writeBytes(13, pinnedPeerCertificateChainSha256_.get(i));
    }
    for (int i = 0; i < pinnedPeerCertificatePublicKeySha256_.size(); i++) {
      output.writeBytes(14, pinnedPeerCertificatePublicKeySha256_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (allowInsecure_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, allowInsecure_);
    }
    for (int i = 0; i < certificate_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, certificate_.get(i));
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serverName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, serverName_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < nextProtocol_.size(); i++) {
        dataSize += computeStringSizeNoTag(nextProtocol_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getNextProtocolList().size();
    }
    if (enableSessionResumption_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, enableSessionResumption_);
    }
    if (disableSystemRoot_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, disableSystemRoot_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(minVersion_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, minVersion_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(maxVersion_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, maxVersion_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cipherSuites_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, cipherSuites_);
    }
    if (preferServerCipherSuites_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(10, preferServerCipherSuites_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(fingerprint_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, fingerprint_);
    }
    if (rejectUnknownSni_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(12, rejectUnknownSni_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < pinnedPeerCertificateChainSha256_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeBytesSizeNoTag(pinnedPeerCertificateChainSha256_.get(i));
      }
      size += dataSize;
      size += 1 * getPinnedPeerCertificateChainSha256List().size();
    }
    {
      int dataSize = 0;
      for (int i = 0; i < pinnedPeerCertificatePublicKeySha256_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeBytesSizeNoTag(pinnedPeerCertificatePublicKeySha256_.get(i));
      }
      size += dataSize;
      size += 1 * getPinnedPeerCertificatePublicKeySha256List().size();
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof cloud.paolu.xray.transport.internet.tls.Config)) {
      return super.equals(obj);
    }
    cloud.paolu.xray.transport.internet.tls.Config other = (cloud.paolu.xray.transport.internet.tls.Config) obj;

    if (getAllowInsecure()
        != other.getAllowInsecure()) return false;
    if (!getCertificateList()
        .equals(other.getCertificateList())) return false;
    if (!getServerName()
        .equals(other.getServerName())) return false;
    if (!getNextProtocolList()
        .equals(other.getNextProtocolList())) return false;
    if (getEnableSessionResumption()
        != other.getEnableSessionResumption()) return false;
    if (getDisableSystemRoot()
        != other.getDisableSystemRoot()) return false;
    if (!getMinVersion()
        .equals(other.getMinVersion())) return false;
    if (!getMaxVersion()
        .equals(other.getMaxVersion())) return false;
    if (!getCipherSuites()
        .equals(other.getCipherSuites())) return false;
    if (getPreferServerCipherSuites()
        != other.getPreferServerCipherSuites()) return false;
    if (!getFingerprint()
        .equals(other.getFingerprint())) return false;
    if (getRejectUnknownSni()
        != other.getRejectUnknownSni()) return false;
    if (!getPinnedPeerCertificateChainSha256List()
        .equals(other.getPinnedPeerCertificateChainSha256List())) return false;
    if (!getPinnedPeerCertificatePublicKeySha256List()
        .equals(other.getPinnedPeerCertificatePublicKeySha256List())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ALLOW_INSECURE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getAllowInsecure());
    if (getCertificateCount() > 0) {
      hash = (37 * hash) + CERTIFICATE_FIELD_NUMBER;
      hash = (53 * hash) + getCertificateList().hashCode();
    }
    hash = (37 * hash) + SERVER_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getServerName().hashCode();
    if (getNextProtocolCount() > 0) {
      hash = (37 * hash) + NEXT_PROTOCOL_FIELD_NUMBER;
      hash = (53 * hash) + getNextProtocolList().hashCode();
    }
    hash = (37 * hash) + ENABLE_SESSION_RESUMPTION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getEnableSessionResumption());
    hash = (37 * hash) + DISABLE_SYSTEM_ROOT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDisableSystemRoot());
    hash = (37 * hash) + MIN_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getMinVersion().hashCode();
    hash = (37 * hash) + MAX_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getMaxVersion().hashCode();
    hash = (37 * hash) + CIPHER_SUITES_FIELD_NUMBER;
    hash = (53 * hash) + getCipherSuites().hashCode();
    hash = (37 * hash) + PREFER_SERVER_CIPHER_SUITES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getPreferServerCipherSuites());
    hash = (37 * hash) + FINGERPRINT_FIELD_NUMBER;
    hash = (53 * hash) + getFingerprint().hashCode();
    hash = (37 * hash) + REJECT_UNKNOWN_SNI_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getRejectUnknownSni());
    if (getPinnedPeerCertificateChainSha256Count() > 0) {
      hash = (37 * hash) + PINNED_PEER_CERTIFICATE_CHAIN_SHA256_FIELD_NUMBER;
      hash = (53 * hash) + getPinnedPeerCertificateChainSha256List().hashCode();
    }
    if (getPinnedPeerCertificatePublicKeySha256Count() > 0) {
      hash = (37 * hash) + PINNED_PEER_CERTIFICATE_PUBLIC_KEY_SHA256_FIELD_NUMBER;
      hash = (53 * hash) + getPinnedPeerCertificatePublicKeySha256List().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static cloud.paolu.xray.transport.internet.tls.Config parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static cloud.paolu.xray.transport.internet.tls.Config parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static cloud.paolu.xray.transport.internet.tls.Config parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static cloud.paolu.xray.transport.internet.tls.Config parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static cloud.paolu.xray.transport.internet.tls.Config parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static cloud.paolu.xray.transport.internet.tls.Config parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static cloud.paolu.xray.transport.internet.tls.Config parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static cloud.paolu.xray.transport.internet.tls.Config parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static cloud.paolu.xray.transport.internet.tls.Config parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static cloud.paolu.xray.transport.internet.tls.Config parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static cloud.paolu.xray.transport.internet.tls.Config parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static cloud.paolu.xray.transport.internet.tls.Config parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(cloud.paolu.xray.transport.internet.tls.Config prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code xray.transport.internet.tls.Config}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:xray.transport.internet.tls.Config)
      cloud.paolu.xray.transport.internet.tls.ConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cloud.paolu.xray.transport.internet.tls.ConfigOuterClass.internal_static_xray_transport_internet_tls_Config_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cloud.paolu.xray.transport.internet.tls.ConfigOuterClass.internal_static_xray_transport_internet_tls_Config_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cloud.paolu.xray.transport.internet.tls.Config.class, cloud.paolu.xray.transport.internet.tls.Config.Builder.class);
    }

    // Construct using cloud.paolu.xray.transport.internet.tls.Config.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      allowInsecure_ = false;
      if (certificateBuilder_ == null) {
        certificate_ = java.util.Collections.emptyList();
      } else {
        certificate_ = null;
        certificateBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      serverName_ = "";
      nextProtocol_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      enableSessionResumption_ = false;
      disableSystemRoot_ = false;
      minVersion_ = "";
      maxVersion_ = "";
      cipherSuites_ = "";
      preferServerCipherSuites_ = false;
      fingerprint_ = "";
      rejectUnknownSni_ = false;
      pinnedPeerCertificateChainSha256_ = java.util.Collections.emptyList();
      pinnedPeerCertificatePublicKeySha256_ = java.util.Collections.emptyList();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return cloud.paolu.xray.transport.internet.tls.ConfigOuterClass.internal_static_xray_transport_internet_tls_Config_descriptor;
    }

    @java.lang.Override
    public cloud.paolu.xray.transport.internet.tls.Config getDefaultInstanceForType() {
      return cloud.paolu.xray.transport.internet.tls.Config.getDefaultInstance();
    }

    @java.lang.Override
    public cloud.paolu.xray.transport.internet.tls.Config build() {
      cloud.paolu.xray.transport.internet.tls.Config result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public cloud.paolu.xray.transport.internet.tls.Config buildPartial() {
      cloud.paolu.xray.transport.internet.tls.Config result = new cloud.paolu.xray.transport.internet.tls.Config(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(cloud.paolu.xray.transport.internet.tls.Config result) {
      if (certificateBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          certificate_ = java.util.Collections.unmodifiableList(certificate_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.certificate_ = certificate_;
      } else {
        result.certificate_ = certificateBuilder_.build();
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        pinnedPeerCertificateChainSha256_ = java.util.Collections.unmodifiableList(pinnedPeerCertificateChainSha256_);
        bitField0_ = (bitField0_ & ~0x00001000);
      }
      result.pinnedPeerCertificateChainSha256_ = pinnedPeerCertificateChainSha256_;
      if (((bitField0_ & 0x00002000) != 0)) {
        pinnedPeerCertificatePublicKeySha256_ = java.util.Collections.unmodifiableList(pinnedPeerCertificatePublicKeySha256_);
        bitField0_ = (bitField0_ & ~0x00002000);
      }
      result.pinnedPeerCertificatePublicKeySha256_ = pinnedPeerCertificatePublicKeySha256_;
    }

    private void buildPartial0(cloud.paolu.xray.transport.internet.tls.Config result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.allowInsecure_ = allowInsecure_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.serverName_ = serverName_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        nextProtocol_.makeImmutable();
        result.nextProtocol_ = nextProtocol_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.enableSessionResumption_ = enableSessionResumption_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.disableSystemRoot_ = disableSystemRoot_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.minVersion_ = minVersion_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.maxVersion_ = maxVersion_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.cipherSuites_ = cipherSuites_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.preferServerCipherSuites_ = preferServerCipherSuites_;
      }
      if (((from_bitField0_ & 0x00000400) != 0)) {
        result.fingerprint_ = fingerprint_;
      }
      if (((from_bitField0_ & 0x00000800) != 0)) {
        result.rejectUnknownSni_ = rejectUnknownSni_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof cloud.paolu.xray.transport.internet.tls.Config) {
        return mergeFrom((cloud.paolu.xray.transport.internet.tls.Config)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(cloud.paolu.xray.transport.internet.tls.Config other) {
      if (other == cloud.paolu.xray.transport.internet.tls.Config.getDefaultInstance()) return this;
      if (other.getAllowInsecure() != false) {
        setAllowInsecure(other.getAllowInsecure());
      }
      if (certificateBuilder_ == null) {
        if (!other.certificate_.isEmpty()) {
          if (certificate_.isEmpty()) {
            certificate_ = other.certificate_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCertificateIsMutable();
            certificate_.addAll(other.certificate_);
          }
          onChanged();
        }
      } else {
        if (!other.certificate_.isEmpty()) {
          if (certificateBuilder_.isEmpty()) {
            certificateBuilder_.dispose();
            certificateBuilder_ = null;
            certificate_ = other.certificate_;
            bitField0_ = (bitField0_ & ~0x00000002);
            certificateBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCertificateFieldBuilder() : null;
          } else {
            certificateBuilder_.addAllMessages(other.certificate_);
          }
        }
      }
      if (!other.getServerName().isEmpty()) {
        serverName_ = other.serverName_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (!other.nextProtocol_.isEmpty()) {
        if (nextProtocol_.isEmpty()) {
          nextProtocol_ = other.nextProtocol_;
          bitField0_ |= 0x00000008;
        } else {
          ensureNextProtocolIsMutable();
          nextProtocol_.addAll(other.nextProtocol_);
        }
        onChanged();
      }
      if (other.getEnableSessionResumption() != false) {
        setEnableSessionResumption(other.getEnableSessionResumption());
      }
      if (other.getDisableSystemRoot() != false) {
        setDisableSystemRoot(other.getDisableSystemRoot());
      }
      if (!other.getMinVersion().isEmpty()) {
        minVersion_ = other.minVersion_;
        bitField0_ |= 0x00000040;
        onChanged();
      }
      if (!other.getMaxVersion().isEmpty()) {
        maxVersion_ = other.maxVersion_;
        bitField0_ |= 0x00000080;
        onChanged();
      }
      if (!other.getCipherSuites().isEmpty()) {
        cipherSuites_ = other.cipherSuites_;
        bitField0_ |= 0x00000100;
        onChanged();
      }
      if (other.getPreferServerCipherSuites() != false) {
        setPreferServerCipherSuites(other.getPreferServerCipherSuites());
      }
      if (!other.getFingerprint().isEmpty()) {
        fingerprint_ = other.fingerprint_;
        bitField0_ |= 0x00000400;
        onChanged();
      }
      if (other.getRejectUnknownSni() != false) {
        setRejectUnknownSni(other.getRejectUnknownSni());
      }
      if (!other.pinnedPeerCertificateChainSha256_.isEmpty()) {
        if (pinnedPeerCertificateChainSha256_.isEmpty()) {
          pinnedPeerCertificateChainSha256_ = other.pinnedPeerCertificateChainSha256_;
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          ensurePinnedPeerCertificateChainSha256IsMutable();
          pinnedPeerCertificateChainSha256_.addAll(other.pinnedPeerCertificateChainSha256_);
        }
        onChanged();
      }
      if (!other.pinnedPeerCertificatePublicKeySha256_.isEmpty()) {
        if (pinnedPeerCertificatePublicKeySha256_.isEmpty()) {
          pinnedPeerCertificatePublicKeySha256_ = other.pinnedPeerCertificatePublicKeySha256_;
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          ensurePinnedPeerCertificatePublicKeySha256IsMutable();
          pinnedPeerCertificatePublicKeySha256_.addAll(other.pinnedPeerCertificatePublicKeySha256_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              allowInsecure_ = input.readBool();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              cloud.paolu.xray.transport.internet.tls.Certificate m =
                  input.readMessage(
                      cloud.paolu.xray.transport.internet.tls.Certificate.parser(),
                      extensionRegistry);
              if (certificateBuilder_ == null) {
                ensureCertificateIsMutable();
                certificate_.add(m);
              } else {
                certificateBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 26: {
              serverName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureNextProtocolIsMutable();
              nextProtocol_.add(s);
              break;
            } // case 34
            case 40: {
              enableSessionResumption_ = input.readBool();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            case 48: {
              disableSystemRoot_ = input.readBool();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 58: {
              minVersion_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000040;
              break;
            } // case 58
            case 66: {
              maxVersion_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000080;
              break;
            } // case 66
            case 74: {
              cipherSuites_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000100;
              break;
            } // case 74
            case 80: {
              preferServerCipherSuites_ = input.readBool();
              bitField0_ |= 0x00000200;
              break;
            } // case 80
            case 90: {
              fingerprint_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000400;
              break;
            } // case 90
            case 96: {
              rejectUnknownSni_ = input.readBool();
              bitField0_ |= 0x00000800;
              break;
            } // case 96
            case 106: {
              com.google.protobuf.ByteString v = input.readBytes();
              ensurePinnedPeerCertificateChainSha256IsMutable();
              pinnedPeerCertificateChainSha256_.add(v);
              break;
            } // case 106
            case 114: {
              com.google.protobuf.ByteString v = input.readBytes();
              ensurePinnedPeerCertificatePublicKeySha256IsMutable();
              pinnedPeerCertificatePublicKeySha256_.add(v);
              break;
            } // case 114
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private boolean allowInsecure_ ;
    /**
     * <pre>
     * Whether or not to allow self-signed certificates.
     * </pre>
     *
     * <code>bool allow_insecure = 1;</code>
     * @return The allowInsecure.
     */
    @java.lang.Override
    public boolean getAllowInsecure() {
      return allowInsecure_;
    }
    /**
     * <pre>
     * Whether or not to allow self-signed certificates.
     * </pre>
     *
     * <code>bool allow_insecure = 1;</code>
     * @param value The allowInsecure to set.
     * @return This builder for chaining.
     */
    public Builder setAllowInsecure(boolean value) {

      allowInsecure_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether or not to allow self-signed certificates.
     * </pre>
     *
     * <code>bool allow_insecure = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearAllowInsecure() {
      bitField0_ = (bitField0_ & ~0x00000001);
      allowInsecure_ = false;
      onChanged();
      return this;
    }

    private java.util.List<cloud.paolu.xray.transport.internet.tls.Certificate> certificate_ =
      java.util.Collections.emptyList();
    private void ensureCertificateIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        certificate_ = new java.util.ArrayList<cloud.paolu.xray.transport.internet.tls.Certificate>(certificate_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        cloud.paolu.xray.transport.internet.tls.Certificate, cloud.paolu.xray.transport.internet.tls.Certificate.Builder, cloud.paolu.xray.transport.internet.tls.CertificateOrBuilder> certificateBuilder_;

    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public java.util.List<cloud.paolu.xray.transport.internet.tls.Certificate> getCertificateList() {
      if (certificateBuilder_ == null) {
        return java.util.Collections.unmodifiableList(certificate_);
      } else {
        return certificateBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public int getCertificateCount() {
      if (certificateBuilder_ == null) {
        return certificate_.size();
      } else {
        return certificateBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public cloud.paolu.xray.transport.internet.tls.Certificate getCertificate(int index) {
      if (certificateBuilder_ == null) {
        return certificate_.get(index);
      } else {
        return certificateBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public Builder setCertificate(
        int index, cloud.paolu.xray.transport.internet.tls.Certificate value) {
      if (certificateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCertificateIsMutable();
        certificate_.set(index, value);
        onChanged();
      } else {
        certificateBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public Builder setCertificate(
        int index, cloud.paolu.xray.transport.internet.tls.Certificate.Builder builderForValue) {
      if (certificateBuilder_ == null) {
        ensureCertificateIsMutable();
        certificate_.set(index, builderForValue.build());
        onChanged();
      } else {
        certificateBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public Builder addCertificate(cloud.paolu.xray.transport.internet.tls.Certificate value) {
      if (certificateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCertificateIsMutable();
        certificate_.add(value);
        onChanged();
      } else {
        certificateBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public Builder addCertificate(
        int index, cloud.paolu.xray.transport.internet.tls.Certificate value) {
      if (certificateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCertificateIsMutable();
        certificate_.add(index, value);
        onChanged();
      } else {
        certificateBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public Builder addCertificate(
        cloud.paolu.xray.transport.internet.tls.Certificate.Builder builderForValue) {
      if (certificateBuilder_ == null) {
        ensureCertificateIsMutable();
        certificate_.add(builderForValue.build());
        onChanged();
      } else {
        certificateBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public Builder addCertificate(
        int index, cloud.paolu.xray.transport.internet.tls.Certificate.Builder builderForValue) {
      if (certificateBuilder_ == null) {
        ensureCertificateIsMutable();
        certificate_.add(index, builderForValue.build());
        onChanged();
      } else {
        certificateBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public Builder addAllCertificate(
        java.lang.Iterable<? extends cloud.paolu.xray.transport.internet.tls.Certificate> values) {
      if (certificateBuilder_ == null) {
        ensureCertificateIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, certificate_);
        onChanged();
      } else {
        certificateBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public Builder clearCertificate() {
      if (certificateBuilder_ == null) {
        certificate_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        certificateBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public Builder removeCertificate(int index) {
      if (certificateBuilder_ == null) {
        ensureCertificateIsMutable();
        certificate_.remove(index);
        onChanged();
      } else {
        certificateBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public cloud.paolu.xray.transport.internet.tls.Certificate.Builder getCertificateBuilder(
        int index) {
      return getCertificateFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public cloud.paolu.xray.transport.internet.tls.CertificateOrBuilder getCertificateOrBuilder(
        int index) {
      if (certificateBuilder_ == null) {
        return certificate_.get(index);  } else {
        return certificateBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public java.util.List<? extends cloud.paolu.xray.transport.internet.tls.CertificateOrBuilder> 
         getCertificateOrBuilderList() {
      if (certificateBuilder_ != null) {
        return certificateBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(certificate_);
      }
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public cloud.paolu.xray.transport.internet.tls.Certificate.Builder addCertificateBuilder() {
      return getCertificateFieldBuilder().addBuilder(
          cloud.paolu.xray.transport.internet.tls.Certificate.getDefaultInstance());
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public cloud.paolu.xray.transport.internet.tls.Certificate.Builder addCertificateBuilder(
        int index) {
      return getCertificateFieldBuilder().addBuilder(
          index, cloud.paolu.xray.transport.internet.tls.Certificate.getDefaultInstance());
    }
    /**
     * <pre>
     * List of certificates to be served on server.
     * </pre>
     *
     * <code>repeated .xray.transport.internet.tls.Certificate certificate = 2;</code>
     */
    public java.util.List<cloud.paolu.xray.transport.internet.tls.Certificate.Builder> 
         getCertificateBuilderList() {
      return getCertificateFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        cloud.paolu.xray.transport.internet.tls.Certificate, cloud.paolu.xray.transport.internet.tls.Certificate.Builder, cloud.paolu.xray.transport.internet.tls.CertificateOrBuilder> 
        getCertificateFieldBuilder() {
      if (certificateBuilder_ == null) {
        certificateBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            cloud.paolu.xray.transport.internet.tls.Certificate, cloud.paolu.xray.transport.internet.tls.Certificate.Builder, cloud.paolu.xray.transport.internet.tls.CertificateOrBuilder>(
                certificate_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        certificate_ = null;
      }
      return certificateBuilder_;
    }

    private java.lang.Object serverName_ = "";
    /**
     * <pre>
     * Override server name.
     * </pre>
     *
     * <code>string server_name = 3;</code>
     * @return The serverName.
     */
    public java.lang.String getServerName() {
      java.lang.Object ref = serverName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serverName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Override server name.
     * </pre>
     *
     * <code>string server_name = 3;</code>
     * @return The bytes for serverName.
     */
    public com.google.protobuf.ByteString
        getServerNameBytes() {
      java.lang.Object ref = serverName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serverName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Override server name.
     * </pre>
     *
     * <code>string server_name = 3;</code>
     * @param value The serverName to set.
     * @return This builder for chaining.
     */
    public Builder setServerName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      serverName_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Override server name.
     * </pre>
     *
     * <code>string server_name = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearServerName() {
      serverName_ = getDefaultInstance().getServerName();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Override server name.
     * </pre>
     *
     * <code>string server_name = 3;</code>
     * @param value The bytes for serverName to set.
     * @return This builder for chaining.
     */
    public Builder setServerNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      serverName_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringArrayList nextProtocol_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    private void ensureNextProtocolIsMutable() {
      if (!nextProtocol_.isModifiable()) {
        nextProtocol_ = new com.google.protobuf.LazyStringArrayList(nextProtocol_);
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <pre>
     * Lists of string as ALPN values.
     * </pre>
     *
     * <code>repeated string next_protocol = 4;</code>
     * @return A list containing the nextProtocol.
     */
    public com.google.protobuf.ProtocolStringList
        getNextProtocolList() {
      nextProtocol_.makeImmutable();
      return nextProtocol_;
    }
    /**
     * <pre>
     * Lists of string as ALPN values.
     * </pre>
     *
     * <code>repeated string next_protocol = 4;</code>
     * @return The count of nextProtocol.
     */
    public int getNextProtocolCount() {
      return nextProtocol_.size();
    }
    /**
     * <pre>
     * Lists of string as ALPN values.
     * </pre>
     *
     * <code>repeated string next_protocol = 4;</code>
     * @param index The index of the element to return.
     * @return The nextProtocol at the given index.
     */
    public java.lang.String getNextProtocol(int index) {
      return nextProtocol_.get(index);
    }
    /**
     * <pre>
     * Lists of string as ALPN values.
     * </pre>
     *
     * <code>repeated string next_protocol = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the nextProtocol at the given index.
     */
    public com.google.protobuf.ByteString
        getNextProtocolBytes(int index) {
      return nextProtocol_.getByteString(index);
    }
    /**
     * <pre>
     * Lists of string as ALPN values.
     * </pre>
     *
     * <code>repeated string next_protocol = 4;</code>
     * @param index The index to set the value at.
     * @param value The nextProtocol to set.
     * @return This builder for chaining.
     */
    public Builder setNextProtocol(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureNextProtocolIsMutable();
      nextProtocol_.set(index, value);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Lists of string as ALPN values.
     * </pre>
     *
     * <code>repeated string next_protocol = 4;</code>
     * @param value The nextProtocol to add.
     * @return This builder for chaining.
     */
    public Builder addNextProtocol(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureNextProtocolIsMutable();
      nextProtocol_.add(value);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Lists of string as ALPN values.
     * </pre>
     *
     * <code>repeated string next_protocol = 4;</code>
     * @param values The nextProtocol to add.
     * @return This builder for chaining.
     */
    public Builder addAllNextProtocol(
        java.lang.Iterable<java.lang.String> values) {
      ensureNextProtocolIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, nextProtocol_);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Lists of string as ALPN values.
     * </pre>
     *
     * <code>repeated string next_protocol = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearNextProtocol() {
      nextProtocol_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Lists of string as ALPN values.
     * </pre>
     *
     * <code>repeated string next_protocol = 4;</code>
     * @param value The bytes of the nextProtocol to add.
     * @return This builder for chaining.
     */
    public Builder addNextProtocolBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureNextProtocolIsMutable();
      nextProtocol_.add(value);
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private boolean enableSessionResumption_ ;
    /**
     * <pre>
     * Whether or not to enable session (ticket) resumption.
     * </pre>
     *
     * <code>bool enable_session_resumption = 5;</code>
     * @return The enableSessionResumption.
     */
    @java.lang.Override
    public boolean getEnableSessionResumption() {
      return enableSessionResumption_;
    }
    /**
     * <pre>
     * Whether or not to enable session (ticket) resumption.
     * </pre>
     *
     * <code>bool enable_session_resumption = 5;</code>
     * @param value The enableSessionResumption to set.
     * @return This builder for chaining.
     */
    public Builder setEnableSessionResumption(boolean value) {

      enableSessionResumption_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether or not to enable session (ticket) resumption.
     * </pre>
     *
     * <code>bool enable_session_resumption = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnableSessionResumption() {
      bitField0_ = (bitField0_ & ~0x00000010);
      enableSessionResumption_ = false;
      onChanged();
      return this;
    }

    private boolean disableSystemRoot_ ;
    /**
     * <pre>
     * If true, root certificates on the system will not be loaded for
     * verification.
     * </pre>
     *
     * <code>bool disable_system_root = 6;</code>
     * @return The disableSystemRoot.
     */
    @java.lang.Override
    public boolean getDisableSystemRoot() {
      return disableSystemRoot_;
    }
    /**
     * <pre>
     * If true, root certificates on the system will not be loaded for
     * verification.
     * </pre>
     *
     * <code>bool disable_system_root = 6;</code>
     * @param value The disableSystemRoot to set.
     * @return This builder for chaining.
     */
    public Builder setDisableSystemRoot(boolean value) {

      disableSystemRoot_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If true, root certificates on the system will not be loaded for
     * verification.
     * </pre>
     *
     * <code>bool disable_system_root = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearDisableSystemRoot() {
      bitField0_ = (bitField0_ & ~0x00000020);
      disableSystemRoot_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object minVersion_ = "";
    /**
     * <pre>
     * The minimum TLS version.
     * </pre>
     *
     * <code>string min_version = 7;</code>
     * @return The minVersion.
     */
    public java.lang.String getMinVersion() {
      java.lang.Object ref = minVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        minVersion_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The minimum TLS version.
     * </pre>
     *
     * <code>string min_version = 7;</code>
     * @return The bytes for minVersion.
     */
    public com.google.protobuf.ByteString
        getMinVersionBytes() {
      java.lang.Object ref = minVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        minVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The minimum TLS version.
     * </pre>
     *
     * <code>string min_version = 7;</code>
     * @param value The minVersion to set.
     * @return This builder for chaining.
     */
    public Builder setMinVersion(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      minVersion_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The minimum TLS version.
     * </pre>
     *
     * <code>string min_version = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearMinVersion() {
      minVersion_ = getDefaultInstance().getMinVersion();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The minimum TLS version.
     * </pre>
     *
     * <code>string min_version = 7;</code>
     * @param value The bytes for minVersion to set.
     * @return This builder for chaining.
     */
    public Builder setMinVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      minVersion_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }

    private java.lang.Object maxVersion_ = "";
    /**
     * <pre>
     * The maximum TLS version.
     * </pre>
     *
     * <code>string max_version = 8;</code>
     * @return The maxVersion.
     */
    public java.lang.String getMaxVersion() {
      java.lang.Object ref = maxVersion_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        maxVersion_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The maximum TLS version.
     * </pre>
     *
     * <code>string max_version = 8;</code>
     * @return The bytes for maxVersion.
     */
    public com.google.protobuf.ByteString
        getMaxVersionBytes() {
      java.lang.Object ref = maxVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        maxVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The maximum TLS version.
     * </pre>
     *
     * <code>string max_version = 8;</code>
     * @param value The maxVersion to set.
     * @return This builder for chaining.
     */
    public Builder setMaxVersion(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      maxVersion_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The maximum TLS version.
     * </pre>
     *
     * <code>string max_version = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxVersion() {
      maxVersion_ = getDefaultInstance().getMaxVersion();
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The maximum TLS version.
     * </pre>
     *
     * <code>string max_version = 8;</code>
     * @param value The bytes for maxVersion to set.
     * @return This builder for chaining.
     */
    public Builder setMaxVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      maxVersion_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }

    private java.lang.Object cipherSuites_ = "";
    /**
     * <pre>
     * Specify cipher suites, except for TLS 1.3.
     * </pre>
     *
     * <code>string cipher_suites = 9;</code>
     * @return The cipherSuites.
     */
    public java.lang.String getCipherSuites() {
      java.lang.Object ref = cipherSuites_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cipherSuites_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Specify cipher suites, except for TLS 1.3.
     * </pre>
     *
     * <code>string cipher_suites = 9;</code>
     * @return The bytes for cipherSuites.
     */
    public com.google.protobuf.ByteString
        getCipherSuitesBytes() {
      java.lang.Object ref = cipherSuites_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cipherSuites_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Specify cipher suites, except for TLS 1.3.
     * </pre>
     *
     * <code>string cipher_suites = 9;</code>
     * @param value The cipherSuites to set.
     * @return This builder for chaining.
     */
    public Builder setCipherSuites(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      cipherSuites_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specify cipher suites, except for TLS 1.3.
     * </pre>
     *
     * <code>string cipher_suites = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearCipherSuites() {
      cipherSuites_ = getDefaultInstance().getCipherSuites();
      bitField0_ = (bitField0_ & ~0x00000100);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specify cipher suites, except for TLS 1.3.
     * </pre>
     *
     * <code>string cipher_suites = 9;</code>
     * @param value The bytes for cipherSuites to set.
     * @return This builder for chaining.
     */
    public Builder setCipherSuitesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      cipherSuites_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }

    private boolean preferServerCipherSuites_ ;
    /**
     * <pre>
     * Whether the server selects its most preferred ciphersuite.
     * </pre>
     *
     * <code>bool prefer_server_cipher_suites = 10;</code>
     * @return The preferServerCipherSuites.
     */
    @java.lang.Override
    public boolean getPreferServerCipherSuites() {
      return preferServerCipherSuites_;
    }
    /**
     * <pre>
     * Whether the server selects its most preferred ciphersuite.
     * </pre>
     *
     * <code>bool prefer_server_cipher_suites = 10;</code>
     * @param value The preferServerCipherSuites to set.
     * @return This builder for chaining.
     */
    public Builder setPreferServerCipherSuites(boolean value) {

      preferServerCipherSuites_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the server selects its most preferred ciphersuite.
     * </pre>
     *
     * <code>bool prefer_server_cipher_suites = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearPreferServerCipherSuites() {
      bitField0_ = (bitField0_ & ~0x00000200);
      preferServerCipherSuites_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object fingerprint_ = "";
    /**
     * <pre>
     * TLS Client Hello fingerprint (uTLS).
     * </pre>
     *
     * <code>string fingerprint = 11;</code>
     * @return The fingerprint.
     */
    public java.lang.String getFingerprint() {
      java.lang.Object ref = fingerprint_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fingerprint_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * TLS Client Hello fingerprint (uTLS).
     * </pre>
     *
     * <code>string fingerprint = 11;</code>
     * @return The bytes for fingerprint.
     */
    public com.google.protobuf.ByteString
        getFingerprintBytes() {
      java.lang.Object ref = fingerprint_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fingerprint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * TLS Client Hello fingerprint (uTLS).
     * </pre>
     *
     * <code>string fingerprint = 11;</code>
     * @param value The fingerprint to set.
     * @return This builder for chaining.
     */
    public Builder setFingerprint(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      fingerprint_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * TLS Client Hello fingerprint (uTLS).
     * </pre>
     *
     * <code>string fingerprint = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearFingerprint() {
      fingerprint_ = getDefaultInstance().getFingerprint();
      bitField0_ = (bitField0_ & ~0x00000400);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * TLS Client Hello fingerprint (uTLS).
     * </pre>
     *
     * <code>string fingerprint = 11;</code>
     * @param value The bytes for fingerprint to set.
     * @return This builder for chaining.
     */
    public Builder setFingerprintBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      fingerprint_ = value;
      bitField0_ |= 0x00000400;
      onChanged();
      return this;
    }

    private boolean rejectUnknownSni_ ;
    /**
     * <code>bool reject_unknown_sni = 12;</code>
     * @return The rejectUnknownSni.
     */
    @java.lang.Override
    public boolean getRejectUnknownSni() {
      return rejectUnknownSni_;
    }
    /**
     * <code>bool reject_unknown_sni = 12;</code>
     * @param value The rejectUnknownSni to set.
     * @return This builder for chaining.
     */
    public Builder setRejectUnknownSni(boolean value) {

      rejectUnknownSni_ = value;
      bitField0_ |= 0x00000800;
      onChanged();
      return this;
    }
    /**
     * <code>bool reject_unknown_sni = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearRejectUnknownSni() {
      bitField0_ = (bitField0_ & ~0x00000800);
      rejectUnknownSni_ = false;
      onChanged();
      return this;
    }

    private java.util.List<com.google.protobuf.ByteString> pinnedPeerCertificateChainSha256_ = java.util.Collections.emptyList();
    private void ensurePinnedPeerCertificateChainSha256IsMutable() {
      if (!((bitField0_ & 0x00001000) != 0)) {
        pinnedPeerCertificateChainSha256_ = new java.util.ArrayList<com.google.protobuf.ByteString>(pinnedPeerCertificateChainSha256_);
        bitField0_ |= 0x00001000;
      }
    }
    /**
     * <pre>
     * &#64;Document A pinned certificate chain sha256 hash.
     *&#64;Document If the server's hash does not match this value, the connection will be aborted.
     *&#64;Document This value replace allow_insecure.
     *&#64;Critical
     * </pre>
     *
     * <code>repeated bytes pinned_peer_certificate_chain_sha256 = 13;</code>
     * @return A list containing the pinnedPeerCertificateChainSha256.
     */
    public java.util.List<com.google.protobuf.ByteString>
        getPinnedPeerCertificateChainSha256List() {
      return ((bitField0_ & 0x00001000) != 0) ?
               java.util.Collections.unmodifiableList(pinnedPeerCertificateChainSha256_) : pinnedPeerCertificateChainSha256_;
    }
    /**
     * <pre>
     * &#64;Document A pinned certificate chain sha256 hash.
     *&#64;Document If the server's hash does not match this value, the connection will be aborted.
     *&#64;Document This value replace allow_insecure.
     *&#64;Critical
     * </pre>
     *
     * <code>repeated bytes pinned_peer_certificate_chain_sha256 = 13;</code>
     * @return The count of pinnedPeerCertificateChainSha256.
     */
    public int getPinnedPeerCertificateChainSha256Count() {
      return pinnedPeerCertificateChainSha256_.size();
    }
    /**
     * <pre>
     * &#64;Document A pinned certificate chain sha256 hash.
     *&#64;Document If the server's hash does not match this value, the connection will be aborted.
     *&#64;Document This value replace allow_insecure.
     *&#64;Critical
     * </pre>
     *
     * <code>repeated bytes pinned_peer_certificate_chain_sha256 = 13;</code>
     * @param index The index of the element to return.
     * @return The pinnedPeerCertificateChainSha256 at the given index.
     */
    public com.google.protobuf.ByteString getPinnedPeerCertificateChainSha256(int index) {
      return pinnedPeerCertificateChainSha256_.get(index);
    }
    /**
     * <pre>
     * &#64;Document A pinned certificate chain sha256 hash.
     *&#64;Document If the server's hash does not match this value, the connection will be aborted.
     *&#64;Document This value replace allow_insecure.
     *&#64;Critical
     * </pre>
     *
     * <code>repeated bytes pinned_peer_certificate_chain_sha256 = 13;</code>
     * @param index The index to set the value at.
     * @param value The pinnedPeerCertificateChainSha256 to set.
     * @return This builder for chaining.
     */
    public Builder setPinnedPeerCertificateChainSha256(
        int index, com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      ensurePinnedPeerCertificateChainSha256IsMutable();
      pinnedPeerCertificateChainSha256_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * &#64;Document A pinned certificate chain sha256 hash.
     *&#64;Document If the server's hash does not match this value, the connection will be aborted.
     *&#64;Document This value replace allow_insecure.
     *&#64;Critical
     * </pre>
     *
     * <code>repeated bytes pinned_peer_certificate_chain_sha256 = 13;</code>
     * @param value The pinnedPeerCertificateChainSha256 to add.
     * @return This builder for chaining.
     */
    public Builder addPinnedPeerCertificateChainSha256(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      ensurePinnedPeerCertificateChainSha256IsMutable();
      pinnedPeerCertificateChainSha256_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * &#64;Document A pinned certificate chain sha256 hash.
     *&#64;Document If the server's hash does not match this value, the connection will be aborted.
     *&#64;Document This value replace allow_insecure.
     *&#64;Critical
     * </pre>
     *
     * <code>repeated bytes pinned_peer_certificate_chain_sha256 = 13;</code>
     * @param values The pinnedPeerCertificateChainSha256 to add.
     * @return This builder for chaining.
     */
    public Builder addAllPinnedPeerCertificateChainSha256(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensurePinnedPeerCertificateChainSha256IsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, pinnedPeerCertificateChainSha256_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * &#64;Document A pinned certificate chain sha256 hash.
     *&#64;Document If the server's hash does not match this value, the connection will be aborted.
     *&#64;Document This value replace allow_insecure.
     *&#64;Critical
     * </pre>
     *
     * <code>repeated bytes pinned_peer_certificate_chain_sha256 = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearPinnedPeerCertificateChainSha256() {
      pinnedPeerCertificateChainSha256_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00001000);
      onChanged();
      return this;
    }

    private java.util.List<com.google.protobuf.ByteString> pinnedPeerCertificatePublicKeySha256_ = java.util.Collections.emptyList();
    private void ensurePinnedPeerCertificatePublicKeySha256IsMutable() {
      if (!((bitField0_ & 0x00002000) != 0)) {
        pinnedPeerCertificatePublicKeySha256_ = new java.util.ArrayList<com.google.protobuf.ByteString>(pinnedPeerCertificatePublicKeySha256_);
        bitField0_ |= 0x00002000;
      }
    }
    /**
     * <pre>
     * &#64;Document A pinned certificate public key sha256 hash.
     *&#64;Document If the server's public key hash does not match this value, the connection will be aborted.
     *&#64;Document This value replace allow_insecure.
     *&#64;Critical
     * </pre>
     *
     * <code>repeated bytes pinned_peer_certificate_public_key_sha256 = 14;</code>
     * @return A list containing the pinnedPeerCertificatePublicKeySha256.
     */
    public java.util.List<com.google.protobuf.ByteString>
        getPinnedPeerCertificatePublicKeySha256List() {
      return ((bitField0_ & 0x00002000) != 0) ?
               java.util.Collections.unmodifiableList(pinnedPeerCertificatePublicKeySha256_) : pinnedPeerCertificatePublicKeySha256_;
    }
    /**
     * <pre>
     * &#64;Document A pinned certificate public key sha256 hash.
     *&#64;Document If the server's public key hash does not match this value, the connection will be aborted.
     *&#64;Document This value replace allow_insecure.
     *&#64;Critical
     * </pre>
     *
     * <code>repeated bytes pinned_peer_certificate_public_key_sha256 = 14;</code>
     * @return The count of pinnedPeerCertificatePublicKeySha256.
     */
    public int getPinnedPeerCertificatePublicKeySha256Count() {
      return pinnedPeerCertificatePublicKeySha256_.size();
    }
    /**
     * <pre>
     * &#64;Document A pinned certificate public key sha256 hash.
     *&#64;Document If the server's public key hash does not match this value, the connection will be aborted.
     *&#64;Document This value replace allow_insecure.
     *&#64;Critical
     * </pre>
     *
     * <code>repeated bytes pinned_peer_certificate_public_key_sha256 = 14;</code>
     * @param index The index of the element to return.
     * @return The pinnedPeerCertificatePublicKeySha256 at the given index.
     */
    public com.google.protobuf.ByteString getPinnedPeerCertificatePublicKeySha256(int index) {
      return pinnedPeerCertificatePublicKeySha256_.get(index);
    }
    /**
     * <pre>
     * &#64;Document A pinned certificate public key sha256 hash.
     *&#64;Document If the server's public key hash does not match this value, the connection will be aborted.
     *&#64;Document This value replace allow_insecure.
     *&#64;Critical
     * </pre>
     *
     * <code>repeated bytes pinned_peer_certificate_public_key_sha256 = 14;</code>
     * @param index The index to set the value at.
     * @param value The pinnedPeerCertificatePublicKeySha256 to set.
     * @return This builder for chaining.
     */
    public Builder setPinnedPeerCertificatePublicKeySha256(
        int index, com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      ensurePinnedPeerCertificatePublicKeySha256IsMutable();
      pinnedPeerCertificatePublicKeySha256_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * &#64;Document A pinned certificate public key sha256 hash.
     *&#64;Document If the server's public key hash does not match this value, the connection will be aborted.
     *&#64;Document This value replace allow_insecure.
     *&#64;Critical
     * </pre>
     *
     * <code>repeated bytes pinned_peer_certificate_public_key_sha256 = 14;</code>
     * @param value The pinnedPeerCertificatePublicKeySha256 to add.
     * @return This builder for chaining.
     */
    public Builder addPinnedPeerCertificatePublicKeySha256(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      ensurePinnedPeerCertificatePublicKeySha256IsMutable();
      pinnedPeerCertificatePublicKeySha256_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * &#64;Document A pinned certificate public key sha256 hash.
     *&#64;Document If the server's public key hash does not match this value, the connection will be aborted.
     *&#64;Document This value replace allow_insecure.
     *&#64;Critical
     * </pre>
     *
     * <code>repeated bytes pinned_peer_certificate_public_key_sha256 = 14;</code>
     * @param values The pinnedPeerCertificatePublicKeySha256 to add.
     * @return This builder for chaining.
     */
    public Builder addAllPinnedPeerCertificatePublicKeySha256(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensurePinnedPeerCertificatePublicKeySha256IsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, pinnedPeerCertificatePublicKeySha256_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * &#64;Document A pinned certificate public key sha256 hash.
     *&#64;Document If the server's public key hash does not match this value, the connection will be aborted.
     *&#64;Document This value replace allow_insecure.
     *&#64;Critical
     * </pre>
     *
     * <code>repeated bytes pinned_peer_certificate_public_key_sha256 = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearPinnedPeerCertificatePublicKeySha256() {
      pinnedPeerCertificatePublicKeySha256_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00002000);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:xray.transport.internet.tls.Config)
  }

  // @@protoc_insertion_point(class_scope:xray.transport.internet.tls.Config)
  private static final cloud.paolu.xray.transport.internet.tls.Config DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new cloud.paolu.xray.transport.internet.tls.Config();
  }

  public static cloud.paolu.xray.transport.internet.tls.Config getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Config>
      PARSER = new com.google.protobuf.AbstractParser<Config>() {
    @java.lang.Override
    public Config parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Config> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Config> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public cloud.paolu.xray.transport.internet.tls.Config getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

