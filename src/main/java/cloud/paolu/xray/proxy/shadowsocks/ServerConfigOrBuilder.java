// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proxy/shadowsocks/config.proto

package cloud.paolu.xray.proxy.shadowsocks;

public interface ServerConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:xray.proxy.shadowsocks.ServerConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .xray.common.protocol.User users = 1;</code>
   */
  java.util.List<cloud.paolu.xray.common.protocol.User> 
      getUsersList();
  /**
   * <code>repeated .xray.common.protocol.User users = 1;</code>
   */
  cloud.paolu.xray.common.protocol.User getUsers(int index);
  /**
   * <code>repeated .xray.common.protocol.User users = 1;</code>
   */
  int getUsersCount();
  /**
   * <code>repeated .xray.common.protocol.User users = 1;</code>
   */
  java.util.List<? extends cloud.paolu.xray.common.protocol.UserOrBuilder> 
      getUsersOrBuilderList();
  /**
   * <code>repeated .xray.common.protocol.User users = 1;</code>
   */
  cloud.paolu.xray.common.protocol.UserOrBuilder getUsersOrBuilder(
      int index);

  /**
   * <code>repeated .xray.common.net.Network network = 2;</code>
   * @return A list containing the network.
   */
  java.util.List<cloud.paolu.xray.common.net.Network> getNetworkList();
  /**
   * <code>repeated .xray.common.net.Network network = 2;</code>
   * @return The count of network.
   */
  int getNetworkCount();
  /**
   * <code>repeated .xray.common.net.Network network = 2;</code>
   * @param index The index of the element to return.
   * @return The network at the given index.
   */
  cloud.paolu.xray.common.net.Network getNetwork(int index);
  /**
   * <code>repeated .xray.common.net.Network network = 2;</code>
   * @return A list containing the enum numeric values on the wire for network.
   */
  java.util.List<java.lang.Integer>
  getNetworkValueList();
  /**
   * <code>repeated .xray.common.net.Network network = 2;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of network at the given index.
   */
  int getNetworkValue(int index);
}
